---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app open-swe
  namespace: agents
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  dependsOn:
    - name: cloudflare-tunnel
      namespace: network
  values:
    controllers:
      open-swe:
        strategy: RollingUpdate
        containers:
          app:
            image:
              repository: node
              tag: 18-alpine
            env:
              PORT: &port 2024
              # Application configuration
              OPEN_SWE_APP_URL: "https://open-swe.${SECRET_DOMAIN}"
              # Optional: Database configuration
              DATABASE_URL: "sqlite:///app/data/open-swe.db"
              # Optional: Logging configuration
              LOG_LEVEL: "INFO"
            envFrom:
              - secretRef:
                  name: open-swe-secrets
            command: ["/bin/sh"]
            args:
              - -c
              - |
                # Install dependencies
                apk add --no-cache git python3 make g++
                npm install -g yarn
                # Clone and build the application
                git clone https://github.com/langchain-ai/open-swe.git /app
                cd /app
                yarn install
                cd apps/open-swe
                yarn dev
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: *port
                  initialDelaySeconds: 30
                  periodSeconds: 10
                  timeoutSeconds: 5
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
                memory: 256Mi
              limits:
                cpu: 500m
                memory: 1Gi
    # Default pod options
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
    # Service configuration
    service:
      app:
        controller: open-swe
        ports:
          http:
            port: 80
            targetPort: *port
    # Ingress configuration with Tailscale
    ingress:
      app:
        enabled: true
        className: tailscale
        hosts:
          - host: open-swe
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - open-swe
    # Persistent volume configuration
    persistence:
      data:
        enabled: true
        type: persistentVolumeClaim
        accessMode: ReadWriteOnce
        size: 5Gi
        storageClass: synology-iscsi-delete
        globalMounts:
          - path: /app/data
    # ServiceMonitor for monitoring (optional)
    serviceMonitor:
      app:
        enabled: false
        endpoints:
          - port: http
