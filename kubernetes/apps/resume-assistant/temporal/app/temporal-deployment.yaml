# Temporal deployment with PostgreSQL in a single pod
# This replaces the problematic Helm chart with a simple Kubernetes deployment
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: temporal-postgres-pvc
  namespace: resume-assistant
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: longhorn
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: temporal
  namespace: resume-assistant
  labels:
    app: temporal
spec:
  replicas: 1
  selector:
    matchLabels:
      app: temporal
  template:
    metadata:
      labels:
        app: temporal
    spec:
      containers:
      - name: temporal
        image: temporalio/auto-setup:latest
        env:
        - name: DB
          value: postgres12
        - name: DB_PORT
          value: "5432"
        - name: POSTGRES_USER
          value: temporal
        - name: POSTGRES_PWD
          value: temporal
        - name: POSTGRES_SEEDS
          value: localhost
        - name: DYNAMIC_CONFIG_FILE_PATH
          value: config/dynamicconfig/development-sql.yaml
        ports:
        - containerPort: 7233
          name: grpc
        - containerPort: 8080
          name: ui
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
        readinessProbe:
          tcpSocket:
            port: 7233
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: 7233
          initialDelaySeconds: 30
          periodSeconds: 10
      - name: postgres
        image: postgres:13
        env:
        - name: POSTGRES_PASSWORD
          value: temporal
        - name: POSTGRES_USER
          value: temporal
        - name: POSTGRES_DB
          value: temporal
        ports:
        - containerPort: 5432
          name: postgres
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - temporal
          initialDelaySeconds: 10
          periodSeconds: 5
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - temporal
          initialDelaySeconds: 30
          periodSeconds: 10
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: temporal-postgres-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: temporal-frontend
  namespace: resume-assistant
  labels:
    app: temporal
spec:
  selector:
    app: temporal
  ports:
  - name: grpc
    port: 7233
    targetPort: 7233
    protocol: TCP
  - name: ui
    port: 8080
    targetPort: 8080
    protocol: TCP
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: temporal-ui
  namespace: resume-assistant
  annotations: {}
spec:
  ingressClassName: tailscale
  rules:
  - host: temporal.${SECRET_TAILNET}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: temporal-frontend
            port:
              number: 8080
  tls:
  - hosts:
    - temporal.${SECRET_TAILNET}
