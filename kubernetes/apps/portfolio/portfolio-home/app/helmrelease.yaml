---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: portfolio
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      portfolio:
        strategy: RollingUpdate
        containers:
          app:
            image:
              repository: ghcr.io/yamshy/portfolio
              tag: latest
            env:
              PORT: &port 8080
              CADDY_LOG_LEVEL: "INFO"
              CADDY_LOG_OUTPUT: "stdout"
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: *port
                  initialDelaySeconds: 10
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            volumeMounts:
              - name: caddy-data
                mountPath: /root/.local/share/caddy
              - name: caddy-config
                mountPath: /root/.config/caddy
              - name: caddy-logs
                mountPath: /var/log/caddy
            resources:
              requests:
                cpu: 50m
                memory: 64Mi
              limits:
                memory: 128Mi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
      volumes:
        - name: caddy-data
          emptyDir: {}
        - name: caddy-config
          emptyDir: {}
        - name: caddy-logs
          emptyDir: {}
    service:
      app:
        ports:
          http:
            port: 80
            targetPort: *port
    serviceMonitor:
      app:
        enabled: false
        endpoints:
          - port: http
    route:
      app:
        hostnames: ["${SECRET_DOMAIN}"]
        parentRefs:
          - name: external
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - identifier: app
                port: 80
